{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBM,kBAAkB;cAAlB,kBAAkB;;aAAlB,kBAAkB;;;;;8BAAlB,kBAAkB;;;;;;wHAAlB,kBAAkB,0EA4GpB,oBAAoB,GAAG,UAAC,SAAS,EAAK;AAClC,kBAAK,iBAAiB,GAAG,SAAS,CAAC;SACtC,QAKD,oBAAoB,GAAG,YAAM;AACzB,mBAAO,MAAK,iBAAiB,CAAC;SACjC,QAQD,SAAS,GAAG,YAAM;AACd,kBAAK,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAK,EAAK;AACrC,oBAAI,iBAAiB,YAAA,CAAC;;AAEtB,sBAAK,oBAAoB,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;AAErE,iCAAiB,GAAG,MAAK,oBAAoB,EAAE,CAAC;;AAEhD,oBAAI,iBAAiB,KAAK,OAAO,EAAE;AAC/B,0BAAK,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC3B,MAAM,IAAI,iBAAiB,KAAK,SAAS,EAAE;AACxC,0BAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC5B,MAAM,IAAI,iBAAiB,KAAK,QAAQ,EAAE;AACvC,0BAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC7B,MAAM,IAAI,iBAAiB,KAAK,WAAW,EAAE;AAC1C,0BAAK,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC9B;aACJ,CAAC,CAAC;;AAEH,kBAAK,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK,EAAK;AAC/B,sBAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC7B,CAAC,CAAC;SACN,QAcD,SAAS,GAAG,UAAC,SAAS,EAAE,SAAS,EAAK;;;AAGlC,gBAAI,MAAK,iBAAiB,KAAK,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,aAAa,EAAE;AAC/E,sBAAK,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aAClD;;AAED,gBAAI,SAAS,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE;AAC9D,sBAAK,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACtC;;;;AAAA,AAID,gBAAI,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;AACrC,sBAAK,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC1C;;AAED,gBAAI,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,EAAE;AACvC,sBAAK,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC5C;SACJ,QAMD,gBAAgB,GAAG,UAAC,SAAS,EAAK;AAC9B,gBAAI,SAAS,KAAK,SAAS,EAAE;AACzB,sBAAK,MAAM,CAAC,SAAS,EAAE,CAAC;aAC3B,MAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;AAC/B,sBAAK,MAAM,CAAC,UAAU,EAAE,CAAC;aAC5B,MAAM,IAAI,SAAS,KAAK,WAAW,EAAE;AAClC,sBAAK,MAAM,CAAC,SAAS,EAAE,CAAC;aAC3B,MAAM;AACH,sBAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;aACpE;SACJ,QAMD,UAAU,GAAG,UAAC,OAAO,EAAK;;;AAGtB,gBAAI,CAAC,wBAAW,OAAO,CAAC,EAAE;AACtB,sBAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;aAC1D;;AAED,kBAAK,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC,QAQD,gBAAgB,GAAG,UAAC,KAAK,EAAK;AAC1B,kBAAK,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACrC,QAQD,iBAAiB,GAAG,UAAC,MAAM,EAAK;AAC5B,kBAAK,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SACvC,QAOD,YAAY,GAAG,UAAC,IAAI,EAAE,IAAI,EAAK;AAC3B,gBAAI,aAAa,YAAA,CAAC;;AAElB,gBAAI,CAAC,IAAI,EAAE;AACP,sBAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC/C,MAAM;AACH,6BAAa,GAAG,IAAI,CAAC;;AAErB,oBAAI,yBAAU,aAAa,CAAC,EAAE;AAC1B,iCAAa,IAAI,IAAI,CAAC;iBACzB;;AAED,sBAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;aAClD;SACJ,QAED,UAAU,GAAG,YAAM;AACjB,kBAAK,MAAM,CAAC,IAAI,EAAE,CAAC;SACpB,QAED,SAAS,GAAG,UAAC,MAAM,EAAK;AACtB,gBAAI,MAAM,GAAG,CAAC,EAAE;AACd,sBAAM,GAAG,CAAC,CAAC;aACZ,MAAM,IAAI,MAAM,GAAG,GAAG,EAAE;AACvB,sBAAM,GAAG,GAAG,CAAC;aACd;AACD,kBAAK,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC/B;;;;iBAzQC,kBAAkB;;4CA4EC;AACjB,gBAAI,CAAC,MAAM,GAAG,6BAAc,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1C,0BAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;aACvC,CAAC,CAAC;;AAEH,gBAAI,CAAC,SAAS,EAAE,CAAC;;AAEjB,gBAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,gBAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,EAAE;AACvC,oBAAI,CAAC,IAAI,EAAE,CAAC;aACb;SACJ;;;kDAE0B,SAAS,EAAE;AAClC,gBAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACzC;;;gDAEwB;;;AAGrB,mBAAO,KAAK,CAAC;SAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCA6KS;AACN,gBAAI,KAAK,YAAA,CAAC;;AAEV,iBAAK,GAAG;AACJ,qBAAK,EAAE,MAAM;AACb,sBAAM,EAAE,MAAM;AACd,uBAAO,EAAE,OAAO;aACnB,CAAC;;AAEF,mBAAO;;kBAAK,GAAG,EAAC,UAAU,EAAC,KAAK,EAAE,KAAK,AAAC;gBACpC,uCAAK,GAAG,EAAC,QAAQ,EAAC,KAAK,EAAE,KAAK,AAAC,GAAO;aACpC,CAAC;SACV;;;WA1RC,kBAAkB;GAAS,gBAAM,SAAS;;AAA1C,kBAAkB,CACb,UAAU,GAAG;AAChB,QAAI,EAAE,WAAW;AACjB,KAAC,EAAE,OAAO;AACV,KAAC,EAAE,SAAS;AACZ,KAAC,EAAE,QAAQ;AACX,KAAC,EAAE,WAAW;AACd,KAAC,EAAE,MAAM;CACZ;AARC,kBAAkB,CAUb,SAAS,GAAG;;;;;;;;;;;;;;;;AAgBf,YAAQ,EAAE,gBAAM,SAAS,CAAC,IAAI;;;AAG9B,SAAK,EAAE,gBAAM,SAAS,CAAC,IAAI;;AAE3B,WAAO,EAAE,gBAAM,SAAS,CAAC,IAAI;;AAE7B,WAAO,EAAE,gBAAM,SAAS,CAAC,IAAI;AAC7B,UAAM,EAAE,gBAAM,SAAS,CAAC,IAAI;;;AAG5B,iBAAa,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC;AACjC,gBAAQ,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,sBAAc,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,aAAK,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC9C,gBAAQ,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,iBAAS,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,mBAAW,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,WAAG,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC3B,UAAE,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,UAAE,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC1B,sBAAc,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,YAAI,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;AACnE,gBAAQ,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;AACvE,YAAI,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,sBAAc,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,cAAM,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC9B,gBAAQ,EAAE,gBAAM,SAAS,CAAC,MAAM;AAChC,mBAAW,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,WAAG,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,gBAAQ,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC,aAAK,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC7B,aAAK,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/C,YAAI,EAAE,gBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC,CAAC,EAEL;AA9DC,kBAAkB,CAgEb,YAAY,GAAG;AAClB,SAAK,EAAE,MAAM;AACb,UAAM,EAAE,MAAM;AACd,iBAAa,EAAE,WAAW;AAC1B,iBAAa,EAAE,EAAE;AACjB,SAAK,EAAE,iBAAM,EAAE;AACf,UAAM,EAAE,kBAAM,EAAE;AAChB,WAAO,EAAE,mBAAM,EAAE;AACjB,YAAQ,EAAE,oBAAM,EAAE;AAClB,WAAO,EAAE,mBAAM,EAAE;CACpB;kBAmNU,kBAAkB","file":"index.js","sourcesContent":["import React from 'react';\nimport YoutubePlayer from 'youtube-player';\nimport _ from 'lodash';\nimport isNumeric from 'is-numeric';\n\n/**\n * @typedef {string} YoutubePlayer~playbackState\n * @value 'unstarted' Stops and cancels loading of the current video. [stopVideo]{@link https://developers.google.com/youtube/iframe_api_reference#stopVideo}\n * @value 'playing' Plays the currently cued/loaded video. [playVideo]{@link https://developers.google.com/youtube/iframe_api_reference#playVideo}\n * @value 'paused' Pauses the currently playing video. [pauseVideo]{@link https://developers.google.com/youtube/iframe_api_reference#pauseVideo}\n */\n\n/**\n * @property {string} videoId\n * @property {string|number} width (default: '100%').\n * @property {string|number} height (default: '100%').\n * @property {YoutubePlayer~playbackState} playbackState\n * @property {Object} configuration Configuration parameters to be passed to the YouTube Player (known as `playerVars` in the YouTube Player API for iframe Embeds, https://developers.google.com/youtube/player_parameters?playerVersion=HTML5#Parameters).\n */\nclass ReactYoutubePlayer extends React.Component {\n    static stateNames = {\n        '-1': 'unstarted',\n        0: 'ended',\n        1: 'playing',\n        2: 'paused',\n        3: 'buffering',\n        5: 'cued'\n    };\n\n    static propTypes = {\n        // https://developers.google.com/youtube/iframe_api_reference#onReady\n        // onReady: React.PropTypes.func,\n\n        // https://developers.google.com/youtube/iframe_api_reference#onStateChange\n        // onStateChange: React.PropTypes.func,\n\n        // https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange\n        // onPlaybackQualityChange: React.PropTypes.func,\n\n        // https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange\n        // onPlaybackRateChange: React.PropTypes.func,\n\n        // https://developers.google.com/youtube/iframe_api_reference#onApiChange\n        // onApiChange: React.PropTypes.func,\n\n        onBuffer: React.PropTypes.func,\n\n        // https://developers.google.com/youtube/iframe_api_reference#onStateChange\n        onEnd: React.PropTypes.func,\n        // https://developers.google.com/youtube/iframe_api_reference#onError\n        onError: React.PropTypes.func,\n\n        onPause: React.PropTypes.func,\n        onPlay: React.PropTypes.func,\n\n        /* eslint-disable camelcase, id-match */\n        configuration: React.PropTypes.shape({\n            autoplay: React.PropTypes.oneOf([0, 1]),\n            cc_load_policy: React.PropTypes.oneOf([0, 1]),\n            color: React.PropTypes.oneOf(['red', 'white']),\n            controls: React.PropTypes.oneOf([0, 1, 2]),\n            disablekb: React.PropTypes.oneOf([0, 1]),\n            enablejsapi: React.PropTypes.oneOf([0, 1]),\n            end: React.PropTypes.number,\n            fs: React.PropTypes.oneOf([0, 1]),\n            hl: React.PropTypes.string,\n            iv_load_policy: React.PropTypes.oneOf([1, 3]),\n            list: React.PropTypes.oneOf(['search', 'user_uploads', 'playlist']),\n            listType: React.PropTypes.oneOf(['playlist', 'search', 'user_uploads']),\n            loop: React.PropTypes.oneOf([0, 1]),\n            modestbranding: React.PropTypes.oneOf([0, 1]),\n            origin: React.PropTypes.string,\n            playlist: React.PropTypes.string,\n            playsinline: React.PropTypes.oneOf([0, 1]),\n            rel: React.PropTypes.oneOf([0, 1]),\n            showinfo: React.PropTypes.oneOf([0, 1]),\n            start: React.PropTypes.number,\n            theme: React.PropTypes.oneOf(['dark', 'light']),\n            mute: React.PropTypes.oneOf([0, 1])\n        })\n        /* eslint-enable camelcase, id-match */\n    };\n\n    static defaultProps = {\n        width: '100%',\n        height: '100%',\n        playbackState: 'unstarted',\n        configuration: {},\n        onEnd: () => {},\n        onPlay: () => {},\n        onPause: () => {},\n        onBuffer: () => {},\n        onError: () => {}\n    };\n\n    componentDidMount () {\n        this.player = YoutubePlayer(this.refs.player, {\n            playerVars: this.props.configuration\n        });\n\n        this.bindEvent();\n\n        this.diffState({}, this.props);\n        if (this.props.configuration.mute === 1) {\n          this.mute();\n        }\n    }\n\n    componentWillReceiveProps (nextProps) {\n        this.diffState(this.props, nextProps);\n    }\n\n    shouldComponentUpdate () {\n        // console.log('shouldComponentUpdate', 'this.props', this.props);\n\n        return false;\n    }\n\n    /**\n     * State set using 'state' property can change, e.g.\n     * 'playing' will change to 'ended' at the end of the video.\n     * Read playback state reflects the current player state\n     * and is used to compare against the video player properties.\n     *\n     * @param {string} stateName\n     * @returns {undefined}\n     */\n    setRealPlaybackState = (stateName) => {\n        this.realPlaybackState = stateName;\n    };\n\n    /**\n     * @returns {string}\n     */\n    getRealPlaybackState = () => {\n        return this.realPlaybackState;\n    };\n\n    /**\n     * Used to map YouTube IFrame Player API events to the callbacks\n     * defined using the component instance properties.\n     *\n     * @returns {undefined}\n     */\n    bindEvent = () => {\n        this.player.on('stateChange', (event) => {\n            let realPlaybackState;\n\n            this.setRealPlaybackState(ReactYoutubePlayer.stateNames[event.data]);\n\n            realPlaybackState = this.getRealPlaybackState();\n\n            if (realPlaybackState === 'ended') {\n                this.props.onEnd(event);\n            } else if (realPlaybackState === 'playing') {\n                this.props.onPlay(event);\n            } else if (realPlaybackState === 'paused') {\n                this.props.onPause(event);\n            } else if (realPlaybackState === 'buffering') {\n                this.props.onBuffer(event);\n            }\n        });\n\n        this.player.on('error', (event) => {\n            this.props.onError(event);\n        });\n    };\n\n    /**\n     * The complexity of the ReactYoutubePlayer is that it attempts to combine\n     * stateless properties with stateful player. This function is comparing\n     * the last known property value of a state with the last known state of the player.\n     * When these are different, it initiates an action that changes the player state, e.g.\n     * when the current \"state\" property is \"play\" and the last known player state is \"pause\",\n     * then setPlaybackState method will be called.\n     *\n     * @param {Object} prevProps\n     * @param {Object} nextProps\n     * @returns {undefined}\n     */\n    diffState = (prevProps, nextProps) => {\n        // console.log('prevProps', prevProps, 'nextProps', nextProps);\n\n        if (this.realPlaybackState !== nextProps.playbackState && nextProps.playbackState) {\n            this.setPlaybackState(nextProps.playbackState);\n        }\n\n        if (prevProps.videoId !== nextProps.videoId && nextProps.videoId) {\n            this.cueVideoId(nextProps.videoId);\n        }\n\n        // console.log('prevProps.width !== nextProps.width', prevProps.width !== nextProps.width);\n\n        if (prevProps.width !== nextProps.width) {\n            this.setViewportWidth(nextProps.width);\n        }\n\n        if (prevProps.height !== nextProps.height) {\n            this.setViewportHeight(nextProps.height);\n        }\n    };\n\n    /**\n     * @param {string} stateName\n     * @returns {undefined}\n     */\n    setPlaybackState = (stateName) => {\n        if (stateName === 'playing') {\n            this.player.playVideo();\n        } else if (stateName === 'paused') {\n            this.player.pauseVideo();\n        } else if (stateName === 'unstarted') {\n            this.player.stopVideo();\n        } else {\n            throw new Error('Invalid playback state (\"' + stateName + '\").');\n        }\n    };\n\n    /**\n     * @param {string} videoId\n     * @returns {undefined}\n     */\n    cueVideoId = (videoId) => {\n        // console.log('videoId', videoId);\n\n        if (!_.isString(videoId)) {\n            throw new Error('videoId parameter must be a string.');\n        }\n\n        this.player.cueVideoById(videoId);\n    };\n\n    /**\n     * Update element's width without calling the render method.\n     *\n     * @param {string|number} width\n     * @returns {undefined}\n     */\n    setViewportWidth = (width) => {\n        this.setDimension('width', width);\n    };\n\n    /**\n     * Update element's height without calling the render method.\n     *\n     * @param {string|number} height\n     * @returns {undefined}\n     */\n    setViewportHeight = (height) => {\n        this.setDimension('height', height);\n    };\n\n    /**\n     * @param {string} name\n     * @param {string|number} size\n     * @returns {undefined}\n     */\n    setDimension = (name, size) => {\n        let formattedSize;\n\n        if (!size) {\n            this.refs.player.style.removeProperty(name);\n        } else {\n            formattedSize = size;\n\n            if (isNumeric(formattedSize)) {\n                formattedSize += 'px';\n            }\n\n            this.refs.viewport.style[name] = formattedSize;\n        }\n    };\n\n    mutePlayer = () => {\n      this.player.mute();\n    }\n\n    setVolume = (volume) => {\n      if (volume < 0) {\n        volume = 0;\n      } else if (volume > 100) {\n        volume = 100;\n      }\n      this.player.setVolume(volume);\n    };\n\n    /**\n     * @returns {ReactElement}\n     */\n    render () {\n        let style;\n\n        style = {\n            width: '100%',\n            height: '100%',\n            display: 'block'\n        };\n\n        return <div ref='viewport' style={style}>\n            <div ref='player' style={style}></div>\n        </div>;\n    }\n}\n\nexport default ReactYoutubePlayer;\n"],"sourceRoot":"/source/"}